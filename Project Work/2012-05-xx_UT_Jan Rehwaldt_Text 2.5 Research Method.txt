As the expected result of this project is a comprehensive set of transformation rules between the modeling languages Business Process and Notation (BPMN), Mal-Activity Diagrams (MAD) and Secure Tropos (SD) those have to be aligned to a standard framework in a first step. As framework Information System Security Risk management domain model, which was introduced in "A Framework for Aligning Business Process and Security requirements" (ETF8704), was selected.
During the last years a huge set of alignments for several modeling languages, including BPMN, MAD and SD, was developed and published. Those results were the initial starting point for further analysis. Based on those ISSRM domain model alignments the transformability was analyzed and later on transformation rules defined.
In a next step the alignment was taken for identifying possible issues and problem areas concerning the transformation from one language construct in another. As main issues the following three criteria have to be considered in later steps.
1)	Informal, not automatable notations have to be identified and manual transformation guidelines, if possible, specified.
2)	Ambiguous alignments between the modeling language and the ISSRM domain model have to be resolved. This means that certain constructs of a language (e.g. an Actor) may be aligned to several elements within the framework (e.g. Business Asset and Threat agent) resulting in an ambiguity. Thus rules have to be specified under which circumstances language concepts map to which framework concept.
3)	Additionally to ambiguous alignments some mappings are crowded meaning that a certain ISSRM element may be represented by a large number of major concepts in one modeling language. For those rules have to be found which allow manual or automated decisions on how to represent the domain model’s concept in the target modeling language.
On basis of the described literature research and taking the identified main problem areas into account transformation rules were defined in the main step. Therefore all sets of transformations (BPMN->MAD, MAD->BPMN, BPMN->SD, SD->BPMN, MAD->SD, SD->MAD) were elaborated separately.
In a final step the defined transformation rules are validated in a case study taking the popular example case of a meeting scheduler and applying the rules to transform from BPMN to MAD, from MAD to SD and finally from SD back to BPMN. The applicability of the proposed rules is shown in this step.
